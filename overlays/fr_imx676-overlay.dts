// SPDX-License-Identifier: GPL-2.0-only
// Definitions for IMX676 camera module on VC I2C bus
/dts-v1/;
/plugin/;

/* TCA6408 Pxx bus-port define*/
#define PW_EN		0
#define CRESETB		1
#define XMASTER		3

/{
	compatible = "brcm,bcm2712";

	fragment@0 {
		target = <&i2c0if>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@1 {
		target = <&i2c0mux>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@2 {
		target = <&cam0_reg>;
		__dormant__ {
			status = "disabled";
		};
	};

	fragment@3 {
		target = <&cam1_reg>;
		__dormant__ {
			status = "disabled";
		};
	};

	i2c_frag: fragment@4 {
		target = <&i2c_csi_dsi>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			tca6408_20: tca6408@20 {
				compatible = "ti,tca6408";
				gpio-controller;
				#gpio-cells = <2>;
				reg = <0x20>;
				status = "okay";
			};

			cam_node: imx676@1a {
				compatible = "framos,fr_imx676";
				reg = <0x1a>;
				status = "okay";

				rotation = <0>;
				orientation = <0>;

				xmaster-gpio = <&tca6408_20 XMASTER 1>;

				port {
					cam_endpoint: endpoint {
						remote-endpoint = <&csi_ep>;
						clock-lanes = <0>;
						data-lanes = <1 2 3 4>;
						clock-noncontinuous;
						link-frequencies =
							/bits/ 64 <750000000 720000000 445500000 360000000 297000000>;
					};
				};
			};
		};
	};

	csi_frag: fragment@5 {
		target = <&csi1>;
		csi: __overlay__ {
			status = "okay";
			brcm,media-controller;

			port {
				csi_ep: endpoint {
					remote-endpoint = <&cam_endpoint>;
					clock-lanes = <0>;
					data-lanes = <1 2 3 4>;
					clock-noncontinuous;
				};
			};
		};
	};

	reset_cam_1_frag: fragment@6 {
		target = <&cam_node>;
		__dormant__ {
			reset-gpios = <&rp1_gpio 46 0>;
		};
	};

	reset_cam_0_frag: fragment@7 {
		target = <&cam_node>;
		__dormant__ {
			reset-gpios = <&rp1_gpio 34 0>;
		};
	};

	gmsl_frag: fragment@8 {
		target = <&i2c_csi_dsi>;
		__dormant__ {
			framos_dser_a: max96792_a@6a {
					compatible = "framos,fr_max96792";
					reg = <0x6a>;
					csi-mode = "2x4";
					max-src = <1>;
			};
			framos_ser_prim_a: max96793_prim_a@42 { /* i2c serializer physical address */
					compatible = "framos,fr_max96793";
					reg = <0x42>;
					gmsl-dser-device = <&framos_dser_a>;
					is-prim-ser;
			};
		};
	};

	gmsl_cam_frag: fragment@9 {
		target = <&cam_node>;
		__dormant__ {
			def-addr = <0x1a>;
			gmsl = "gmsl";
			gmsl-ser-device = <&framos_ser_prim_a>;
			gmsl-dser-device = <&framos_dser_a>;
			
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "a";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <0>;
				num-lanes = <4>;
				streams = "raw12";
			};
		};
	};

	__overrides__ {
		rotation = <&cam_node>,"rotation:0";
		orientation = <&cam_node>,"orientation:0";
		media-controller = <&csi>,"brcm,media-controller?";
		
		cam1-gmsl =	<0>, "+8+9",
				<&reset_cam_1_frag>, "target:0=",<&framos_dser_a>,
				<0>, "+3+6";
		
		cam0-gmsl =	<0>, "+8+9",
				<&reset_cam_0_frag>, "target:0=",<&framos_dser_a>,
				<&gmsl_frag>, "target:0=",<&i2c_csi_dsi0>,
				<&i2c_frag>, "target:0=",<&i2c_csi_dsi0>,
				<&csi_frag>, "target:0=",<&csi0>,
				<0>, "+2+7";
		
		cam1 =	<0>, "+3+6";
		
		cam0 =	<&i2c_frag>, "target:0=",<&i2c_csi_dsi0>,
			<&csi_frag>, "target:0=",<&csi0>,
			<0>, "+2+7";
	};
};
